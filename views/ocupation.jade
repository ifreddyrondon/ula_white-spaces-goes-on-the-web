extends layout

block content
	.back
		a(href="/")
			img(src="images/back.png")
	#chart-title-container
		#chart-title
			center
				span.largeHeadline	Occupation with threshold 
				br
				span.middleHeadline(style="background-color:#A8C9F2")	#{umbral} dBm (#{zona}) 
	#chart-left-side-screen
		.button_wrapper(align="center")
			.button_underneath.grey(style="padding-top:10;width:146px;height:15px")
				a(id="select_frequency",href="", class="button grey", style="width:180;height:18px;padding-top:6px") Select Frequency
		br
		br
		br
		.button_wrapper(align="center")
			.button_underneath.grey(style="padding-top:10;width:146px;height:15px")
				a(id="select_channel",href="", class="button grey", style="width:180;height:18px;padding-top:6px") Select Channel
		br
		br
		br
		br
		.paragraphText(style="padding-left:30px;")
			center Please select a frequency or channel to display a heatmap of zone <br><b>#{zona}</b>
		br
		br
		br
		br
		br
		br
		a(href="javascript:void(0)", id="generate_pdf_chart")
			img(src="images/download_pdf_file.png")
		input(id="umbral_ipt_hidden", name="ipt_umbral", type="hidden", value="#{umbral}")
		input(id="zona_ipt_hidden", name="zona", type="hidden", value="#{zona}")
		input(id="img_chart_ipt_hidden", name="zona", type="hidden", value="")
	#chart-canvas
		if error
			center
				br
				br
				.error_big	#{error}
	script(type='text/javascript').
		
		window.onload = function(){
			
			var data =!{JSON.stringify(data)};
			var channels =!{JSON.stringify(channels)};
			min = parseInt(data[0]);
			max = parseInt(data[data.length - 1]);
			
			$('#select_frequency').attr('href','/select_frequency?zona=#{zona}&ipt_umbral=#{umbral}&allocation=#{allocation}&min='+min+'&max='+max+'');
			$('#select_channel').attr('href','/select_channel?zona=#{zona}&ipt_umbral=#{umbral}&allocation=#{allocation}&min='+min+'&max='+max+'');
			
			$.jqplot.config.enablePlugins = true;
			$.jqplot._noToImageButton = true;
    
			var plot1 = $.jqplot('chart-canvas', [data], {
				cursor:	{
					zoom:true, 
					tooltipLocation:'ne',
					showVerticalLine: true,
					showHorizontalLine: true,
					useAxesFormatters: true
				},
				grid: {
					drawBorder: false,
					shadow: false,
					background: 'rgba(0,0,0,0)'
				},
				highlighter: { 
					show: true,
					sizeAdjust: 7.5
				},
				seriesDefaults: { 
					shadowAlpha: 0.1,
					shadowDepth: 2,
					fillToZero: true
				},
				series: [
					{
						color: 'rgba(198,88,88,.6)',
						negativeColor: 'rgba(100,50,50,.6)',
						showMarker: true,
						showLine: true,
						fill: true,
						fillAndStroke: true,
						markerOptions: {
							style: 'filledCircle',
							size: 5
						},
						rendererOptions: {
							smooth: true
						}
					},
					{
						color: 'rgba(44, 190, 160, 0.7)',
						showMarker: true,
						rendererOptions: {
							smooth: true,
						},
						markerOptions: {
							style: 'filledSquare',
							size: 8
						},
					}
				],
				axes: {
					xaxis: {
						pad: 0,
						tickOptions: {
							showGridline: false
						},
						tickRenderer:$.jqplot.CanvasAxisTickRenderer,
						label:'Frequency (MHz)', 
						labelOptions:{
							fontFamily:'times, Times New Roman, times-roman, georgia, serif',
							fontSize: '20pt'
						},
					},
					yaxis:{
						min: 0,
						max: 1,
						ticks: ['0','0.1','0.2','0.3','0.4','0.5','0.6','0.7','0.8','0.9','1.0'],
						pad: 0,
						renderer:$.jqplot.LogAxisRenderer,
						tickOptions:{
							labelPosition: 'middle', 
							angle:-30
						},
						tickRenderer:$.jqplot.CanvasAxisTickRenderer,
						labelRenderer: $.jqplot.CanvasAxisLabelRenderer,
						labelOptions:{
							fontFamily:'times, Times New Roman, times-roman, georgia, serif',
							fontSize: '20pt'
						},
						label:'Occupancy (ratio)'
					}
				},
				canvasOverlay: { 
					show: true,
					objects: channels
				},
			});
						
			var imgData = $('#chart-canvas').jqplotToImageStr({});
			$('#img_chart_ipt_hidden').val(imgData);
			
		}